# https://aka.ms/yaml

trigger:
- master

pool:
  name: Hosted VS2017
  demands:
  - msbuild
  - visualstudio
  - vstest
#pool:
#  vmImage: 'ubuntu-latest'

variables:
  solution: '**/Medja.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: Install NuGet latest

- task: DotNetCoreInstaller@0
  displayName: Install dotnet core sdk 3 preview9
  inputs:
    packageType: 'sdk'
    version: '3.0.100-preview9-014004'

- task: NuGetCommand@2
  displayName: Restore NuGet packages
  inputs:
    restoreSolution: '$(solution)'
    vstsFeed: '49e07518-6419-486d-9ec2-aea3f61f1ded'

#- task: VSBuild@1
#  displayName: 'Build Medja.sln'
#  inputs:
#    vsVersion: latest
#    solution: '$(solution)'
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
#    logProjectEvents: false

- task: DotNetCoreCLI@2
  displayName: Build Medja.sln
  inputs:
    command: build
    argument: $(solution) --configuration $(buildConfiguration)

- task: VSTest@2
  displayName: Run UnitTests
#  inputs:
#    codeCoverageEnabled: true
#    diagnosticsEnabled: True

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    SymbolServerType: TeamServices
    DetailedLog: false
    TreatNotIndexedAsWarning: true
  continueOnError: true

- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: pack
    packagesToPack: '**\Medja.OpenTk\*.csproj'
    versioningScheme: byBuildNumber

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: pack
    packagesToPack: '**/Medja.Utils/*.csproj; **/Medja/*.csproj; **/Medja.ZeroMQ/*.csproj; **/Medja.ProtoBuf/*.csproj; **/Medja.NativeInterfaces/*.csproj; **/Medja.OpenTk.Themes/*.csproj; **/Medja.Properties/*.csproj'
    versioningScheme: byBuildNumber

- task: NuGetCommand@2
  displayName: 'NuGet push'
  inputs:
    command: push
    publishVstsFeed: '49e07518-6419-486d-9ec2-aea3f61f1ded'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

